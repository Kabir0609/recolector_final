<?xml version="1.0"?>
<!-- This URDF was automatically created by SolidWorks to URDF Exporter! Originally created by Stephen Brawner (brawner@gmail.com) 
     Commit Version: 1.6.0-4-g7f85cfe  Build Version: 1.6.7995.38578
     For more information, please see http://wiki.ros.org/sw_urdf_exporter -->
<robot
  name="recolector_v8">
  <link
    name="base_link">
    <inertial>
      <origin
        xyz="-0.000711812483994489 0.00172160024482687 0.257994794286112"
        rpy="0 0 0" />
      <mass
        value="1.4551450949967" />
      <inertia
        ixx="0.0265498248699101"
        ixy="0"
        ixz="0"
        iyy="0.0354943837149582"
        iyz="0"
        izz="0.0584651005440145" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://recolector_ros2/meshes/base_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.894117647058823 0.596078431372549 0.596078431372549 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://recolector_ros2/meshes/base_link.STL" />
      </geometry>
    </collision>
  </link>

  <gazebo reference="base_link">
    <mu1>200</mu1>
    <mu2>200</mu2>
    <kp>1000000</kp>
    <kd>1</kd>
  </gazebo>

  <link
    name="rueda_derecha_link">
    <inertial>
      <origin
        xyz="-1.6264494554219E-06 1.25045503471255E-06 -0.0119390562108947"
        rpy="0 0 0" />
      <mass
        value="0.529919806264885" />
      <inertia
        ixx="0.002"
        ixy="0"
        ixz="0"
        iyy="0.002"
        iyz="0"
        izz="0.001" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://recolector_ros2/meshes/rueda_derecha_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.898039215686275 0.917647058823529 0.929411764705882 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://recolector_ros2/meshes/rueda_derecha_link.STL" />
      </geometry>
    </collision>
  </link>

  <gazebo reference="rueda_derecha_link">
    <mu1>200</mu1>
    <mu2>200</mu2>
    <kp>1000000</kp>
    <kd>1</kd>
    <material>Gazebo/Gray</material>
  </gazebo>

  <joint
    name="rueda_derecha_joint"
    type="continuous">
    <origin
      xyz="-0.09446 -0.1758 -0.1338"
      rpy="1.5708 -0.074776 3.1416" />
    <parent
      link="base_link" />
    <child
      link="rueda_derecha_link" />
    <axis
      xyz="0 0 1" />
    <limit
      effort="100"
      velocity="100" />
    <dynamics
      damping="0.1"
      friction="0.1" />
  </joint>
  <link
    name="rueda_izquiera_link">
    <inertial>
      <origin
        xyz="-1.7946015785919E-06 -9.9416029515631E-07 0.0119390562153693"
        rpy="0 0 0" />
      <mass
        value="0.529919806574137" />
      <inertia
        ixx="0.002"
        ixy="0"
        ixz="0"
        iyy="0.002"
        iyz="0"
        izz="0.001" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://recolector_ros2/meshes/rueda_izquiera_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.898039215686275 0.917647058823529 0.929411764705882 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://recolector_ros2/meshes/rueda_izquiera_link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="rueda_izquiera_joint"
    type="continuous">
    <origin
      xyz="-0.09446 0.1758 -0.1338"
      rpy="-1.5708 0.074776 0" />
    <parent
      link="base_link" />
    <child
      link="rueda_izquiera_link" />
    <axis
      xyz="0 0 1" />
    <limit
      effort="100"
      velocity="100" />
    <dynamics
      damping="0.1"
      friction="0.1" />
  </joint>

  <gazebo reference="rueda_izquiera_link">
    <mu1>200</mu1>
    <mu2>200</mu2>
    <kp>1000000</kp>
    <kd>1</kd>
    <material>Gazebo/Gray</material>
  </gazebo>

  <link
    name="base_castor_link">
    <inertial>
      <origin
        xyz="0.0191648864694682 -0.00146496473370206 0.0128267514302346"
        rpy="0 0 0" />
      <mass
        value="0.215171406252836" />
      <inertia
        ixx="0.000121585630266892"
        ixy="2.48092821183915E-07"
        ixz="-2.41578569761316E-05"
        iyy="0.000127975596762742"
        iyz="1.57442789839309E-06"
        izz="0.000165459219137249" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://recolector_ros2/meshes/base_castor_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.63921568627451 0.666666666666667 0.67843137254902 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://recolector_ros2/meshes/base_castor_link.STL" />
      </geometry>
    </collision>
  </link>

  <gazebo reference="base_castor_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>1000000</kp>
    <kd>1</kd>
    <material>Gazebo/Gray</material>
  </gazebo>
  
  <joint
    name="base_castor_joint"
    type="continuous">
    <origin
      xyz="0.11414 0 -0.13548"
      rpy="-3.1366 0 0" />
    <parent
      link="base_link" />
    <child
      link="base_castor_link" />
    <axis
      xyz="0 0 1" />
    <limit
      effort="100"
      velocity="100" />
    <dynamics
      damping="0.1"
      friction="0.1" />
  </joint>
  <link
    name="rueda_castor_link">
    <inertial>
      <origin
        xyz="-7.07219005580129E-12 -3.79738573919042E-10 -6.69822119991892E-09"
        rpy="0 0 0" />
      <mass
        value="0.106094497392739" />
      <inertia
        ixx="0.002"
        ixy="0"
        ixz="0"
        iyy="0.002"
        iyz="0"
        izz="0.001" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://recolector_ros2/meshes/rueda_castor_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="1 1 1 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://recolector_ros2/meshes/rueda_castor_link.STL" />
      </geometry>
    </collision>
  </link>

  <gazebo reference="rueda_castor_link">
    <mu1>0.01</mu1>
    <mu2>0.01</mu2>
    <kp>1000000</kp>
    <kd>1</kd>
    <material>Gazebo/Gray</material>
  </gazebo>

  <joint
    name="rueda_castor_joint"
    type="continuous">
    <origin
      xyz="0.037463 -0.0019644 0.036457"
      rpy="0 -1.5658 1.5708" />
    <parent
      link="base_castor_link" />
    <child
      link="rueda_castor_link" />
    <axis
      xyz="0 0 1" />
    <limit
      effort="100"
      velocity="100" />
    <dynamics
      damping="0.1"
      friction="0.1" />
  </joint>


  <joint name="laser_joint" type="fixed">
        <parent
          link="base_link" />
        <child link="laser_frame"/>
        <origin xyz="-0.1 0 0.020" rpy="0 0 0"/>
  </joint>

  <link name="laser_frame">
   <inertial>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <mass
        value="0.1" />
      <inertia
        ixx="0.002"
        ixy="0"
        ixz="0"
        iyy="0.002"
        iyz="0"
        izz="0.001" />
    </inertial>
    <visual>
      <geometry>
        <cylinder radius="0.05" length="0.04"/>
      </geometry>
      <material
        name="">
        <color
         rgba="1 0 0 1" />
      </material>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="0.05" length="0.04"/>
      </geometry>
    </collision> 
  </link>

 <!-- Camera -->
  <link name="camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.010 0.03 0.03"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.010 0.03 0.03"/>
      </geometry>
      <material name="green"/>
    </visual>
  </link>

  <joint name="camera_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0.2 0 0.022" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="camera_link"/>
  </joint>


  

  <gazebo>
    <plugin name="two_wheeled_robot_diff_drive" filename="libgazebo_ros_diff_drive.so">
 
      <update_rate>100</update_rate>
      
      <!-- ruedas -->
      <left_joint>rueda_izquiera_joint</left_joint>
      <right_joint>rueda_derecha_joint</right_joint>
 
      <!-- cinematica -->
      <wheel_separation>0.3516</wheel_separation>
      <wheel_diameter>0.144</wheel_diameter>
 
      <!-- limites -->
      <max_wheel_torque>10</max_wheel_torque>
      <max_wheel_acceleration>10</max_wheel_acceleration>
 
      <!-- Recibe los comandos de velocidad -->
      <command_topic>cmd_vel</command_topic>
 
      <!-- output -->
      <!-- Cuando es falso, publica no recibe el comando de odometria -->
      <publish_odom>true</publish_odom>
 
      <!-- When true, publish coordinate transform from odom to base_footprint -->
      <!-- I usually use the robot_localization package to publish this transform -->  
      <publish_odom_tf>true</publish_odom_tf>
     
      <!-- When true, publish coordinate transform from base_link to the wheels -->
      <!-- The robot_state_publisher package is often used to publish this transform -->  
      <publish_wheel_tf>true</publish_wheel_tf>
 
      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom_link</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>
 
      <odometry_source>1</odometry_source>
      <ros>
        <remapping>odom:=wheel/odometry</remapping>
      </ros>
    </plugin>
  </gazebo>

  <gazebo reference="laser_frame">
        <material>Gazebo/Black</material>

        <sensor name="laser" type="ray">
            <pose> 0 0 0 0 0 0 </pose>
            <visualize>true</visualize>
            <update_rate>10</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <min_angle>-3.14</min_angle>
                        <max_angle>3.14</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.3</min>
                    <max>12</max>
                </range>
            </ray>
            <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so">
                <ros>
                    <argument>~/out:=scan</argument>
                </ros>
                <output_type>sensor_msgs/LaserScan</output_type>
                <frame_name>laser_frame</frame_name>
            </plugin>
        </sensor>
  </gazebo>

  <gazebo reference="camera_link">
    <material>Gazebo/Green</material>
    <sensor type="camera" name="camera">
      <update_rate>30.0</update_rate>
      <visualize></visualize>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>spcbot/camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>


  <gazebo>
    <plugin name="gazebo_ros_joint_state_publisher"
        filename="libgazebo_ros_joint_state_publisher.so">
        <update_rate>100</update_rate>
        <joint_name>base_castor_joint</joint_name>
        <joint_name>rueda_castor_joint</joint_name>
    </plugin>
  </gazebo>

</robot>
